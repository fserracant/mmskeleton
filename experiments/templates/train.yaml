argparse_cfg:
  gpus:
    bind_to: processor_cfg.gpus
    help: number of gpus
  work_dir:
    bind_to: processor_cfg.work_dir
    help: the dir to save logs and models
    default: --EXPPATH--
  batch_size:
    bind_to: processor_cfg.batch_size
  resume_from:
    bind_to: processor_cfg.resume_from
    help: the checkpoint file to resume from



processor_cfg:
  type: 'processor.recognition_TFM.train'

  # model setting
  model_cfg:
    type: 'models.backbones.ST_GCN_18_TFM'
    in_channels: 3
    num_class: 6
    dropout: 0.5
    edge_importance_weighting: True
    temporal_kernel: 11
    graph_cfg:
      max_hop: 1
      layout: 'videopose3d'
      strategy: 'spatial'
  loss_cfg:
      #type: 'torch.nn.KLDivLoss'
      #type: 'torch.nn.MSELoss'
      #type: 'torch.nn.L1Loss'
      type: 'torch.nn.SmoothL1Loss'
      #type: 'torch.nn.CrossEntropyLoss'

  # dataset setting
  dataset_cfg:
    - type: 'deprecated.datasets.skeleton_feeder_TFM.SkeletonFeederTFM'
      data_path: --EXPPATH--/--TRAINSKELSFILE--
      label_path: --EXPPATH--/--TRAINLABELSFILE--
      output_path:
      debug: false
    - type: 'deprecated.datasets.skeleton_feeder_TFM.SkeletonFeederTFM'
      data_path: --EXPPATH--/--VALSKELSFILE--
      label_path: --EXPPATH--/--VALLABELSFILE--
      output_path:
      debug: false

  # dataloader setting
  batch_size: 32
  gpus: 1

  # optimizer setting
  optimizer_cfg:
    type: 'torch.optim.Adam'
    lr: .01
    #weight_decay: 0.0001

    #type: 'torch.optim.SGD'
    #lr: .1
    #momentum: 0.9
    #nesterov: true
    #weight_decay: 0.0001

  # runtime setting
  workflow: [['train', 5], ['val', 1]]
  work_dir: 
  log_level: 0
  total_epochs: 150
  training_hooks:
    lr_config:
      policy: 'step'
      step: [10, 50]
    log_config:
      interval: 200
      hooks:
        - type: TextLoggerHook
        - type: TensorboardLoggerHook
          log_dir: --EXPPATH--
    checkpoint_config:
      interval: 5
    optimizer_config:
  resume_from:
  load_from:
  save_to: --EXPPATH--/model.chkpt 
